@page "/serverconfig"
@inject ngPost.MAUI.ViewModels.ServerConfigViewModel ViewModel

<PageTitle>Servers</PageTitle>

<div class="section-frame">
    <h3 class="section-title">Configured Servers</h3>
    <table class="server-table">
        <thead>
            <tr>
                <th>Host</th>
                <th>Port</th>
                <th>SSL</th>
                <th>Connections</th>
                <th>Username</th>
                <th>Password</th>
                <th>Enabled</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var server in ViewModel.Servers)
            {
                <tr>

                    <td class="server-actions">
                        <button @onclick="@(() => ViewModel.TestConnectionCommand.Execute(server))">Test</button>
                        <button @onclick="@(() => ViewModel.RemoveServerCommand.Execute(server))">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="section-frame">
    <h3 class="section-title">Add New Server</h3>
    <div class="form-grid">
        <label>Host:</label>
        <input type="text" @bind="@ViewModel.NewServerHost" placeholder="news.usenetserver.com" />

        <label>Port:</label>
        <input type="number" @bind="@ViewModel.NewServerPort" placeholder="563" />

        <label>SSL:</label>
        <input type="checkbox" @bind="@ViewModel.NewServerSsl" />

        <label>Connections:</label>
        <input type="number" @bind="@ViewModel.NewServerConnections" placeholder="60" />

        <label>Username:</label>
        <input type="text" @bind="@ViewModel.NewServerUsername" placeholder="Username" />

        <label>Password:</label>
        <input type="password" @bind="@ViewModel.NewServerPassword" placeholder="Password" />
    </div>
    <div class="button-group">
        <button @onclick="@ViewModel.AddServerCommand.Execute">Add Server</button>
    </div>
</div>

<div class="button-group">
    <button @onclick="@ViewModel.SaveServersCommand.Execute">Save All Servers</button>
    @if (ViewModel.IsLoading)
    {
        <p>Loading...</p>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync();
        ViewModel.PropertyChanged += (sender, args) => StateHasChanged();
    }
}

